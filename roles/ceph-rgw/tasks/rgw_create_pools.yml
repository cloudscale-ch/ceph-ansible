---
- name: remove ec profile
  command: "{{ container_exec_cmd }} ceph --connect-timeout 10 --cluster {{ cluster }} osd erasure-code-profile rm {{ item.value.ec_profile }}"
  loop: "{{ rgw_create_pools | dict2items }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
  changed_when: false
  when:
    - item.value.type is defined
    - item.value.type == 'ec'
  failed_when: false

- name: set ec profile
  command: "{{ container_exec_cmd }} ceph --connect-timeout 10 --cluster {{ cluster }} osd erasure-code-profile set {{ item.value.ec_profile }} k={{ item.value.ec_k }} m={{ item.value.ec_m }}"
  loop: "{{ rgw_create_pools | dict2items }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
  changed_when: false
  when:
    - item.value.type is defined
    - item.value.type == 'ec'

- name: set crush rule
  command: "{{ container_exec_cmd }} ceph --connect-timeout 10 --cluster {{ cluster }} osd crush rule create-erasure {{ item.key }} {{ item.value.ec_profile }}"
  loop: "{{ rgw_create_pools | dict2items }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
  changed_when: false
  when:
    - item.value.type is defined
    - item.value.type == 'ec'

- name: create pools for rgw
  ceph_pool:
    name: '{{ item.key }}'
    state: present
    cluster: '{{ cluster }}'
    size: '{{ item.value.size | default(omit) if item.value.type == "replicated" else omit }}'
    pg_num: '{{ item.value.pg_num | default(omit) }}'
    pool_type: '{{ item.value.type == "ec" | ternary("erasure", "replicated") }}'
    erasure_profile: '{{ item.value.ec_profile | default(omit) }}'
    application: 'rgw'
  loop: "{{ rgw_create_pools | dict2items }}"
  delegate_to: "{{ groups[mon_group_name][0] }}"
