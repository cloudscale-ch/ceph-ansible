---
- name: create rados gateway instance key
  ceph_key:
    name: "client.rgw.{{ ansible_hostname }}.{{ item.instance_name }}"
    state: present
    # The value below must be valid JSON starting with "{" to be automatically
    # converted to a dict by Ansible
    caps: >-
      {% if rgw_create_pools -%}
      {"mon": "allow r",
       "osd": "{% for name in rgw_create_pools %}allow rwx pool={{ name }}{% if not loop.last %}, {% endif %}{% endfor %}"}
      {% else -%}
      {"osd": "allow rwx",
       "mon": "allow rw"}
      {% endif %}
  loop: "{{ rgw_instances }}"
  when: cephx | bool
  delegate_to: '{{ groups[mon_group_name][0] }}'

- name: get rados gateway keys from monitors
  command: "{{ container_exec_cmd }} ceph --cluster {{ cluster }} auth get client.rgw.{{ ansible_hostname }}.{{ item.instance_name }}"
  register: _rgw_keys
  loop: "{{ rgw_instances }}"
  delegate_to: '{{ groups[mon_group_name][0] }}'
  when: cephx | bool

- name: put rados gateway keys
  copy:
    dest: /var/lib/ceph/radosgw/{{ cluster }}-rgw.{{ ansible_hostname }}.{{ item.item.instance_name }}/keyring
    content: '{{ item.stdout + "\n" }}'
    owner: "ceph"
    group: "ceph"
    mode: "0600"
  loop: "{{ _rgw_keys }}"
  when:
    - cephx | bool
    # This fails in check mode if the src does not yet exist
    - not ansible_check_mode
